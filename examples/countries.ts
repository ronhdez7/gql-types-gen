// Generated by 'npx gql-gen --schema https://countries.trevorblades.com --output examples/countries.ts'

export type Schema = {
Boolean: string;

Continent: {
code: Schema["ID"],
countries: (Schema["Country"])[],
name: Schema["String"],
};

ContinentFilterInput: {
code: Schema["StringQueryOperatorInput"] | null,
};

Country: {
awsRegion: Schema["String"],
capital: Schema["String"] | null,
code: Schema["ID"],
continent: Schema["Continent"],
currencies: (Schema["String"])[],
currency: Schema["String"] | null,
emoji: Schema["String"],
emojiU: Schema["String"],
languages: (Schema["Language"])[],
name: [{
lang: Schema["String"] | null,
},
Schema["String"]
],
native: Schema["String"],
phone: Schema["String"],
phones: (Schema["String"])[],
states: (Schema["State"])[],
subdivisions: (Schema["Subdivision"])[],
};

CountryFilterInput: {
code: Schema["StringQueryOperatorInput"] | null,
continent: Schema["StringQueryOperatorInput"] | null,
currency: Schema["StringQueryOperatorInput"] | null,
name: Schema["StringQueryOperatorInput"] | null,
};

Float: number;

ID: string;

Int: number;

Language: {
code: Schema["ID"],
name: Schema["String"],
native: Schema["String"],
rtl: Schema["Boolean"],
};

LanguageFilterInput: {
code: Schema["StringQueryOperatorInput"] | null,
};

Query: {
continent: [{
code: Schema["ID"],
},
Schema["Continent"] | null
],
continents: [{
filter: Schema["ContinentFilterInput"] | null,
},
(Schema["Continent"])[]
],
countries: [{
filter: Schema["CountryFilterInput"] | null,
},
(Schema["Country"])[]
],
country: [{
code: Schema["ID"],
},
Schema["Country"] | null
],
language: [{
code: Schema["ID"],
},
Schema["Language"] | null
],
languages: [{
filter: Schema["LanguageFilterInput"] | null,
},
(Schema["Language"])[]
],
};

State: {
code: Schema["String"] | null,
country: Schema["Country"],
name: Schema["String"],
};

String: string;

StringQueryOperatorInput: {
eq: Schema["String"] | null,
in: (Schema["String"])[] | null,
ne: Schema["String"] | null,
nin: (Schema["String"])[] | null,
regex: Schema["String"] | null,
};

Subdivision: {
code: Schema["ID"],
emoji: Schema["String"] | null,
name: Schema["String"],
};

}

export const schema = {
Boolean: "",Continent: {
code: "ID!",
countries: ["Country!"!],
name: "String!",
},ContinentFilterInput: {
code: "StringQueryOperatorInput",
},Country: {
awsRegion: "String!",
capital: "String",
code: "ID!",
continent: "Continent!",
currencies: ["String!"!],
currency: "String",
emoji: "String!",
emojiU: "String!",
languages: ["Language!"!],
name: [{
lang: "String",
},
"String!"
],
native: "String!",
phone: "String!",
phones: ["String!"!],
states: ["State!"!],
subdivisions: ["Subdivision!"!],
},CountryFilterInput: {
code: "StringQueryOperatorInput",
continent: "StringQueryOperatorInput",
currency: "StringQueryOperatorInput",
name: "StringQueryOperatorInput",
},Float: "",ID: "",Int: "",Language: {
code: "ID!",
name: "String!",
native: "String!",
rtl: "Boolean!",
},LanguageFilterInput: {
code: "StringQueryOperatorInput",
},Query: {
continent: [{
code: "ID!",
},
"Continent"
],
continents: [{
filter: "ContinentFilterInput",
},
["Continent!"!]
],
countries: [{
filter: "CountryFilterInput",
},
["Country!"!]
],
country: [{
code: "ID!",
},
"Country"
],
language: [{
code: "ID!",
},
"Language"
],
languages: [{
filter: "LanguageFilterInput",
},
["Language!"!]
],
},State: {
code: "String",
country: "Country!",
name: "String!",
},String: "",StringQueryOperatorInput: {
eq: "String",
in: ["String!"],
ne: "String",
nin: ["String!"],
regex: "String",
},Subdivision: {
code: "ID!",
emoji: "String",
name: "String!",
},} as const